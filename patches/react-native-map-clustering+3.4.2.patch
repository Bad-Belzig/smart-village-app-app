diff --git a/node_modules/react-native-map-clustering/lib/ClusteredMapView.js b/node_modules/react-native-map-clustering/lib/ClusteredMapView.js
index 9e44320..7e58f27 100644
--- a/node_modules/react-native-map-clustering/lib/ClusteredMapView.js
+++ b/node_modules/react-native-map-clustering/lib/ClusteredMapView.js
@@ -6,7 +6,7 @@ import React, {
   useRef,
   forwardRef,
 } from "react";
-import { Dimensions, LayoutAnimation, Platform } from "react-native";
+import { Dimensions, LayoutAnimation, Platform, View } from "react-native";
 import MapView, { Marker, Polyline } from "react-native-maps";
 import SuperCluster from "supercluster";
 import ClusterMarker from "./ClusteredMarker";
@@ -21,28 +21,30 @@ import {
 const ClusteredMapView = forwardRef(
   (
     {
-      radius,
-      maxZoom,
-      minZoom,
-      minPoints,
-      extent,
-      nodeSize,
+      radius = Dimensions.get("window").width * 0.06,
+      maxZoom = 20,
+      minZoom = 1,
+      minPoints = 2,
+      extent = 512,
+      nodeSize = 64,
       children,
-      onClusterPress,
-      onRegionChangeComplete,
-      onMarkersChange,
-      preserveClusterPressBehavior,
-      clusteringEnabled,
-      clusterColor,
-      clusterTextColor,
+      onClusterPress = () => {},
+      onRegionChangeComplete = () => {},
+      onMarkersChange = () => {},
+      preserveClusterPressBehavior = false,
+      clusteringEnabled = true,
+      clusterColor = "#00B386",
+      clusterTextColor = "#FFFFFF",
       clusterFontFamily,
-      spiderLineColor,
-      layoutAnimationConf,
-      animationEnabled,
+      spiderLineColor = "#FF0000",
+      layoutAnimationConf = LayoutAnimation.Presets.spring,
+      animationEnabled = true,
       renderCluster,
-      tracksViewChanges,
-      spiralEnabled,
-      superClusterRef,
+      tracksViewChanges = false,
+      spiralEnabled = true,
+      superClusterRef = {},
+      mapRef: mapRefProp = () => {},
+      edgePadding = { top: 50, left: 50, right: 50, bottom: 50 },
       ...restProps
     },
     ref
@@ -96,6 +98,7 @@ const ClusteredMapView = forwardRef(
 
       const bBox = calculateBBox(currentRegion);
       const zoom = returnMapZoom(currentRegion, bBox, minZoom);
+
       const markers = superCluster.getClusters(bBox, zoom);
 
       updateMarkers(markers);
@@ -143,10 +146,10 @@ const ClusteredMapView = forwardRef(
         }
         updateMarkers(markers);
         onMarkersChange(markers);
-        onRegionChangeComplete(region, markers);
+        onRegionChangeComplete?.(region, markers);
         updateRegion(region);
       } else {
-        onRegionChangeComplete(region);
+        onRegionChangeComplete?.(region);
       }
     };
 
@@ -165,7 +168,7 @@ const ClusteredMapView = forwardRef(
       }));
 
       mapRef.current.fitToCoordinates(coordinates, {
-        edgePadding: restProps.edgePadding,
+        edgePadding: edgePadding,
       });
 
       onClusterPress(cluster, children);
@@ -177,7 +180,7 @@ const ClusteredMapView = forwardRef(
         ref={(map) => {
           mapRef.current = map;
           if (ref) ref.current = map;
-          restProps.mapRef(map);
+          mapRefProp(map);
         }}
         onRegionChangeComplete={_onRegionChangeComplete}
       >
@@ -198,6 +201,7 @@ const ClusteredMapView = forwardRef(
                 key={`cluster-${marker.id}`}
                 {...marker}
                 onPress={_onClusterPress(marker)}
                 clusterColor={
                   restProps.selectedClusterId === marker.id
                     ? restProps.selectedClusterColor
@@ -231,32 +235,4 @@ const ClusteredMapView = forwardRef(
   }
 );
 
-ClusteredMapView.defaultProps = {
-  clusteringEnabled: true,
-  spiralEnabled: true,
-  animationEnabled: true,
-  preserveClusterPressBehavior: false,
-  layoutAnimationConf: LayoutAnimation.Presets.spring,
-  tracksViewChanges: false,
-  // SuperCluster parameters
-  radius: Dimensions.get("window").width * 0.06,
-  maxZoom: 20,
-  minZoom: 1,
-  minPoints: 2,
-  extent: 512,
-  nodeSize: 64,
-  // Map parameters
-  edgePadding: { top: 50, left: 50, right: 50, bottom: 50 },
-  // Cluster styles
-  clusterColor: "#00B386",
-  clusterTextColor: "#FFFFFF",
-  spiderLineColor: "#FF0000",
-  // Callbacks
-  onRegionChangeComplete: () => {},
-  onClusterPress: () => {},
-  onMarkersChange: () => {},
-  superClusterRef: {},
-  mapRef: () => {},
-};
-
 export default memo(ClusteredMapView);
diff --git a/node_modules/react-native-map-clustering/lib/ClusteredMarker.js b/node_modules/react-native-map-clustering/lib/ClusteredMarker.js
index 73700ba..523e888 100755
--- a/node_modules/react-native-map-clustering/lib/ClusteredMarker.js
+++ b/node_modules/react-native-map-clustering/lib/ClusteredMarker.js
@@ -1,4 +1,4 @@
-import React, { memo } from "react";
+import React, { memo, useEffect, useMemo, useRef } from "react";
 import { Text, View, StyleSheet, TouchableOpacity } from "react-native";
 import { Marker } from "react-native-maps";
 import { returnMarkerStyle } from "./helpers";
@@ -12,17 +12,29 @@ const ClusteredMarker = ({
   clusterFontFamily,
   tracksViewChanges,
 }) => {
+  const markerRef = useRef(null);
   const points = properties.point_count;
   const { width, height, fontSize, size } = returnMarkerStyle(points);
 
+  const markerKey = useMemo(() => {
+    return `${geometry.coordinates[0]}_${geometry.coordinates[1]} ${points} ${width} ${height}`;
+  }, [geometry.coordinates[0], geometry.coordinates[1], points, width, height]);
+
+  useEffect(() => {
+    markerRef.current?.redraw();
+  }, [markerRef.current, markerKey]);
+
   return (
     <Marker
-      key={`${geometry.coordinates[0]}_${geometry.coordinates[1]}`}
+      key={markerKey}
+      identifier={markerKey}
+      ref={markerRef}
       coordinate={{
         longitude: geometry.coordinates[0],
         latitude: geometry.coordinates[1],
       }}
       style={{ zIndex: points + 1 }}
       onPress={onPress}
       tracksViewChanges={tracksViewChanges}
     >
